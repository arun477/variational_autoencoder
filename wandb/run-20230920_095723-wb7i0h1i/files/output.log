train: train, epoch:1, loss: 0.0437
train: eval, epoch:1, loss: 0.0415
train: train, epoch:2, loss: 0.0313
train: eval, epoch:2, loss: 0.0300
train: train, epoch:3, loss: 0.0244
train: eval, epoch:3, loss: 0.0242
train: train, epoch:4, loss: 0.0216
train: eval, epoch:4, loss: 0.0222
train: train, epoch:5, loss: 0.0208
train: eval, epoch:5, loss: 0.0209
train: train, epoch:6, loss: 0.0202
train: eval, epoch:6, loss: 0.0200
train: train, epoch:7, loss: 0.0194
train: eval, epoch:7, loss: 0.0194
train: train, epoch:8, loss: 0.0187
train: eval, epoch:8, loss: 0.0193
train: train, epoch:9, loss: 0.0181
train: eval, epoch:9, loss: 0.0185
train: train, epoch:10, loss: 0.0181
train: eval, epoch:10, loss: 0.0179
train: train, epoch:11, loss: 0.0175
train: eval, epoch:11, loss: 0.0179
train: train, epoch:12, loss: 0.0175
train: eval, epoch:12, loss: 0.0176
train: train, epoch:13, loss: 0.0171
train: eval, epoch:13, loss: 0.0173
train: train, epoch:14, loss: 0.0162
train: eval, epoch:14, loss: 0.0165
train: train, epoch:15, loss: 0.0163
train: eval, epoch:15, loss: 0.0162
train: train, epoch:16, loss: 0.0162
train: eval, epoch:16, loss: 0.0160
train: train, epoch:17, loss: 0.0154
train: eval, epoch:17, loss: 0.0160
train: train, epoch:18, loss: 0.0157
train: eval, epoch:18, loss: 0.0159
train: train, epoch:19, loss: 0.0153
train: eval, epoch:19, loss: 0.0152
train: train, epoch:20, loss: 0.0145
train: eval, epoch:20, loss: 0.0152
train: train, epoch:21, loss: 0.0146
train: eval, epoch:21, loss: 0.0151
train: train, epoch:22, loss: 0.0149
train: eval, epoch:22, loss: 0.0150
train: train, epoch:23, loss: 0.0136
train: eval, epoch:23, loss: 0.0148
train: train, epoch:24, loss: 0.0147
train: eval, epoch:24, loss: 0.0145
train: train, epoch:25, loss: 0.0147
train: eval, epoch:25, loss: 0.0146
train: train, epoch:26, loss: 0.0144
train: eval, epoch:26, loss: 0.0146
train: train, epoch:27, loss: 0.0145
train: eval, epoch:27, loss: 0.0145
train: train, epoch:28, loss: 0.0135
train: eval, epoch:28, loss: 0.0141
train: train, epoch:29, loss: 0.0144
train: eval, epoch:29, loss: 0.0143
train: train, epoch:30, loss: 0.0139
train: eval, epoch:30, loss: 0.0141
train: train, epoch:31, loss: 0.0136
train: eval, epoch:31, loss: 0.0138
train: train, epoch:32, loss: 0.0141
train: eval, epoch:32, loss: 0.0141
train: train, epoch:33, loss: 0.0133
train: eval, epoch:33, loss: 0.0142
train: train, epoch:34, loss: 0.0140
train: eval, epoch:34, loss: 0.0137
train: train, epoch:35, loss: 0.0134
train: eval, epoch:35, loss: 0.0138
train: train, epoch:36, loss: 0.0143
train: eval, epoch:36, loss: 0.0139
train: train, epoch:37, loss: 0.0131
train: eval, epoch:37, loss: 0.0140
train: train, epoch:38, loss: 0.0133
train: eval, epoch:38, loss: 0.0137
train: train, epoch:39, loss: 0.0129
train: eval, epoch:39, loss: 0.0138
train: train, epoch:40, loss: 0.0131
train: eval, epoch:40, loss: 0.0135
/var/folders/8k/07c2mpg56x7c31_26k0qj2y00000gn/T/ipykernel_1325/3361057490.py:3: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  np.array([imgs, xb[:sz]]),
/var/folders/8k/07c2mpg56x7c31_26k0qj2y00000gn/T/ipykernel_1325/3361057490.py:3: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
